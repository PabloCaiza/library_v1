version: '3'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: books
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 6
  traefik:
    image: traefik:v2.9
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8084:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app-authors:
    image: pjcaiza/app-authors:1.0
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_JDBC_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql/books
    depends_on:
      postgres-sql:
        condition: service_healthy
      traefik:
        condition: service_started
        
    deploy:
      replicas: 2
    ports:
      - 9090
    labels:
      - "traefik.http.routers.author.rule=PathPrefix(`/author-service`)"
      - "traefik.http.middlewares.author-stripprefix.stripprefix.prefixes=/author-service"
      - "traefik.http.routers.author.middlewares=author-stripprefix"
  app-books:
    image: pjcaiza/app-books:1.0
    ports:
      - 7070
    deploy:
      replicas: 3
    environment:
      DB_CONNECTION_URL: jdbc:postgresql://postgres-sql/books
      DB_CONNECTION_USERNAME: postgres
      DB_CONNECTION_PASSWORD: postgres
    depends_on:
      - traefik
      - postgres-sql
    labels:
      - "traefik.http.routers.book.rule=PathPrefix(`/book-service`)"
      - "traefik.http.middlewares.book-stripprefix.stripprefix.prefixes=/book-service"
      - "traefik.http.routers.book.middlewares=book-stripprefix"
  app-web:
    image: pjcaiza/app-web:1.0 
    ports:
      - 8080:8080
    depends_on:
      - traefik

